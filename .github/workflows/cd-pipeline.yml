# name: BE CI/CD
# on:
#   push:
#     branches: [ infra/cicd, be, fe ]
#   pull_request:
#     branches: [ infra/cicd, be, fe ]

# permissions:
#   contents: read

# jobs:
#  cd-pipeline:
#     needs:
#       - build-spring-boot-image
#       - build-react-image
#     name: continuos deploy
#     runs-on: ubuntu-latest
#     environment: dev
#     steps:
#       - uses: actions/checkout@master
#       # nginx.conf 파일을 EC2에 업로드
#       - name: copy nginx.conf file via ssh password
#         uses: appleboy/scp-action@master
#         with:
#           host: ${{ secrets.HOST }}
#           username: ec2-user
#           key: ${{ secrets.PRIVATE_KEY }}
#           port: 22
#           source: "./nginx/nginx.conf"
#           target: "/home/ec2-user/"

#       # docker-compose.yml 파일을 EC2에 업로드
#       - name: copy docker-compose file via ssh password
#         uses: appleboy/scp-action@master
#         with:
#           host: ${{ secrets.HOST }}
#           username: ec2-user
#           key: ${{ secrets.PRIVATE_KEY }}
#           port: 22
#           source: "docker-compose.yml"
#           target: "/home/ec2-user/"
     
#       # docker-compose 실행
#       - name: Deploy to dev
#         uses: appleboy/ssh-action@master
#         with:
#           host: ${{ secrets.HOST }} # EC2 인스턴스 퍼블릭 DNS
#           username: ec2-user
#           key: ${{ secrets.PRIVATE_KEY }} # pem 키
#           port: 22
#           script: |
#             sudo chmod 666 /var/run/docker.sock
#             docker-compose -f docker-compose.yml down -v
#             docker-compose -f docker-compose.yml pull
#             docker-compose -f docker-compose.yml up -d
#             docker image prune -f

